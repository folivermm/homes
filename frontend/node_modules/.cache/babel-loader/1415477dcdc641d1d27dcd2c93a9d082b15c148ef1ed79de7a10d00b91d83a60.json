{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\foliv\\\\Desktop\\\\homes\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect } from 'react';\n// import { BrowserRouter as Router, Route, Routes } from 'react-router-dom';\n// import HomeList from './components/HomeList';\n// import HomeDetails from './components/HomeDetails';\n// import { listHomes } from './utils/api';\n// import { getHomeWithRealtor } from './utils/api'\n\n// function App() {\n//   const [homes, setHomes] = useState([]);\n//   const [loading, setLoading] = useState(true);\n//   const [error, setError] = useState(null);\n\n//   useEffect(() => {\n//     async function fetchHomes() {\n//       try {\n//         const fetchedHomes = await listHomes();\n//         setHomes(fetchedHomes);\n//         setLoading(false);\n//       } catch (error) {\n//         console.error('Error fetching homes:', error);\n//         setError(error);\n//         setLoading(false);\n//       }\n//     }\n\n//     fetchHomes();\n//   }, []);\n\n//   return (\n//     <Router>\n//       <div className=\"App\">\n//         <Routes>\n//           <Route\n//             path=\"/\"\n//             element={\n//               loading ? (\n//                 <div>Loading...</div>\n//               ) : error ? (\n//                 <div>Error: {error.message}</div>\n//               ) : (\n//                 <HomeList homes={homes} />\n//               )\n//             }\n//           />\n//           <Route path=\"/:id\" element={<HomeDetails getHome={getHomeWithRealtor} />} />\n//         </Routes>\n//       </div>\n//     </Router>\n//   );\n// }\n\n// export default App;\n\nimport React, { useState, useEffect } from 'react';\nimport { BrowserRouter as Router, Route, Routes } from 'react-router-dom';\nimport HomeList from './components/HomeList';\nimport HomeDetails from './components/HomeDetails';\nimport AddHomeForm from './components/AddHomeForm'; // Import the AddHomeForm component\nimport { listHomes, getHomeWithRealtor, createHome } from './utils/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [homes, setHomes] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    async function fetchHomes() {\n      try {\n        const fetchedHomes = await listHomes();\n        setHomes(fetchedHomes);\n        setLoading(false);\n      } catch (error) {\n        console.error('Error fetching homes:', error);\n        setError(error);\n        setLoading(false);\n      }\n    }\n    fetchHomes();\n  }, []);\n  const addHome = async newHome => {\n    try {\n      // Make an API request to create a new home\n      const createdHome = await createHome(newHome);\n      // Update the list of homes with the new home\n      setHomes(prevHomes => [...prevHomes, createdHome]);\n    } catch (error) {\n      console.error('Error creating home:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: /*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          element: loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"Loading...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 17\n          }, this) : error ? /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [\"Error: \", error.message]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(HomeList, {\n              homes: homes\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(AddHomeForm, {\n              onHomeAdded: addHome\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 19\n            }, this), \" \"]\n          }, void 0, true)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/:id\",\n          element: /*#__PURE__*/_jsxDEV(HomeDetails, {\n            getHome: getHomeWithRealtor\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 39\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"y+K9r3MHUknKEVvcY2XirfSRK0I=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","BrowserRouter","Router","Route","Routes","HomeList","HomeDetails","AddHomeForm","listHomes","getHomeWithRealtor","createHome","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","homes","setHomes","loading","setLoading","error","setError","fetchHomes","fetchedHomes","console","addHome","newHome","createdHome","prevHomes","children","className","path","element","fileName","_jsxFileName","lineNumber","columnNumber","message","onHomeAdded","getHome","_c","$RefreshReg$"],"sources":["C:/Users/foliv/Desktop/homes/frontend/src/App.js"],"sourcesContent":["// import React, { useState, useEffect } from 'react';\n// import { BrowserRouter as Router, Route, Routes } from 'react-router-dom';\n// import HomeList from './components/HomeList';\n// import HomeDetails from './components/HomeDetails';\n// import { listHomes } from './utils/api';\n// import { getHomeWithRealtor } from './utils/api'\n\n// function App() {\n//   const [homes, setHomes] = useState([]);\n//   const [loading, setLoading] = useState(true);\n//   const [error, setError] = useState(null);\n\n//   useEffect(() => {\n//     async function fetchHomes() {\n//       try {\n//         const fetchedHomes = await listHomes();\n//         setHomes(fetchedHomes);\n//         setLoading(false);\n//       } catch (error) {\n//         console.error('Error fetching homes:', error);\n//         setError(error);\n//         setLoading(false);\n//       }\n//     }\n\n//     fetchHomes();\n//   }, []);\n\n//   return (\n//     <Router>\n//       <div className=\"App\">\n//         <Routes>\n//           <Route\n//             path=\"/\"\n//             element={\n//               loading ? (\n//                 <div>Loading...</div>\n//               ) : error ? (\n//                 <div>Error: {error.message}</div>\n//               ) : (\n//                 <HomeList homes={homes} />\n//               )\n//             }\n//           />\n//           <Route path=\"/:id\" element={<HomeDetails getHome={getHomeWithRealtor} />} />\n//         </Routes>\n//       </div>\n//     </Router>\n//   );\n// }\n\n// export default App;\n\n\nimport React, { useState, useEffect } from 'react';\nimport { BrowserRouter as Router, Route, Routes } from 'react-router-dom';\nimport HomeList from './components/HomeList';\nimport HomeDetails from './components/HomeDetails';\nimport AddHomeForm from './components/AddHomeForm'; // Import the AddHomeForm component\nimport { listHomes, getHomeWithRealtor, createHome } from './utils/api';\n\nfunction App() {\n  const [homes, setHomes] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    async function fetchHomes() {\n      try {\n        const fetchedHomes = await listHomes();\n        setHomes(fetchedHomes);\n        setLoading(false);\n      } catch (error) {\n        console.error('Error fetching homes:', error);\n        setError(error);\n        setLoading(false);\n      }\n    }\n\n    fetchHomes();\n  }, []);\n\n  const addHome = async (newHome) => {\n    try {\n      // Make an API request to create a new home\n      const createdHome = await createHome(newHome);\n      // Update the list of homes with the new home\n      setHomes((prevHomes) => [...prevHomes, createdHome]);\n    } catch (error) {\n      console.error('Error creating home:', error);\n    }\n  };\n\n  return (\n    <Router>\n      <div className=\"App\">\n        <Routes>\n          <Route\n            path=\"/\"\n            element={\n              loading ? (\n                <div>Loading...</div>\n              ) : error ? (\n                <div>Error: {error.message}</div>\n              ) : (\n                <>\n                  <HomeList homes={homes} />\n                  <AddHomeForm onHomeAdded={addHome} /> {/* Render the AddHomeForm */}\n                </>\n              )\n            }\n          />\n          <Route path=\"/:id\" element={<HomeDetails getHome={getHomeWithRealtor} />} />\n        </Routes>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}