{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\foliv\\\\Desktop\\\\homes\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { BrowserRouter as Router, Route, Routes } from 'react-router-dom';\nimport HomeList from './components/HomeList';\nimport HomeDetails from './components/HomeDetails';\nimport { listHomes, getHomeWithRealtor } from './utils/api'; // Import the getHomeWithRealtor function\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [homes, setHomes] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    // Fetch data for the home list\n    async function fetchHomes() {\n      try {\n        const fetchedHomes = await listHomes();\n        setHomes(fetchedHomes);\n        setLoading(false);\n      } catch (error) {\n        console.error('Error fetching homes:', error);\n        setError(error);\n        setLoading(false);\n      }\n    }\n    fetchHomes();\n  }, []);\n\n  // Fetch data for a specific home with its associated realtor\n  async function fetchHomeWithRealtor(id) {\n    try {\n      const homeWithRealtor = await getHomeWithRealtor(id);\n      return homeWithRealtor;\n    } catch (error) {\n      console.error('Error fetching home with realtor:', error);\n      throw error;\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: /*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          element: loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"Loading...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 17\n          }, this) : error ? /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [\"Error: \", error.message]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(HomeList, {\n            homes: homes\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/:id\",\n          element: /*#__PURE__*/_jsxDEV(HomeDetails, {\n            fetchHomeWithRealtor: fetchHomeWithRealtor\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 22\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"y+K9r3MHUknKEVvcY2XirfSRK0I=\");\n_c = App;\nexport default App;\n\n// import React, { useState, useEffect } from 'react';\n// import { BrowserRouter as Router, Route, Routes } from 'react-router-dom';\n// import HomeList from './components/HomeList';\n// import HomeDetails from './components/HomeDetails';\n// import homesData from './data/homes.json'; // Import the homes data\n\n// function App() {\n//   const [homes, setHomes] = useState([]);\n\n//   useEffect(() => {\n//     // Fetch or set your data here\n//     setHomes(homesData); // Set the data to the state\n//   }, []);\n\n//   // Render HomeList only if homes data is available\n//   const homeListElement = homes.length > 0 ? <HomeList homes={homes} /> : null;\n\n//   return (\n//     <Router>\n//       <div className=\"App\">\n//         <Routes>\n//           <Route path=\"/\" element={homeListElement} />\n//           <Route path=\"/:id\" element={<HomeDetails />} />\n//         </Routes>\n//       </div>\n//     </Router>\n//   );\n// }\n\n// export default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","BrowserRouter","Router","Route","Routes","HomeList","HomeDetails","listHomes","getHomeWithRealtor","jsxDEV","_jsxDEV","App","_s","homes","setHomes","loading","setLoading","error","setError","fetchHomes","fetchedHomes","console","fetchHomeWithRealtor","id","homeWithRealtor","children","className","path","element","fileName","_jsxFileName","lineNumber","columnNumber","message","_c","$RefreshReg$"],"sources":["C:/Users/foliv/Desktop/homes/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { BrowserRouter as Router, Route, Routes } from 'react-router-dom';\nimport HomeList from './components/HomeList';\nimport HomeDetails from './components/HomeDetails';\nimport { listHomes, getHomeWithRealtor } from './utils/api'; // Import the getHomeWithRealtor function\n\nfunction App() {\n  const [homes, setHomes] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    // Fetch data for the home list\n    async function fetchHomes() {\n      try {\n        const fetchedHomes = await listHomes();\n        setHomes(fetchedHomes);\n        setLoading(false);\n      } catch (error) {\n        console.error('Error fetching homes:', error);\n        setError(error);\n        setLoading(false);\n      }\n    }\n\n    fetchHomes();\n  }, []);\n\n  // Fetch data for a specific home with its associated realtor\n  async function fetchHomeWithRealtor(id) {\n    try {\n      const homeWithRealtor = await getHomeWithRealtor(id);\n      return homeWithRealtor;\n    } catch (error) {\n      console.error('Error fetching home with realtor:', error);\n      throw error;\n    }\n  }\n\n  return (\n    <Router>\n      <div className=\"App\">\n        <Routes>\n          <Route\n            path=\"/\"\n            element={\n              loading ? (\n                <div>Loading...</div>\n              ) : error ? (\n                <div>Error: {error.message}</div>\n              ) : (\n                <HomeList homes={homes} />\n              )\n            }\n          />\n          <Route\n            path=\"/:id\"\n            element={<HomeDetails fetchHomeWithRealtor={fetchHomeWithRealtor} />}\n          />\n        </Routes>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// import React, { useState, useEffect } from 'react';\n// import { BrowserRouter as Router, Route, Routes } from 'react-router-dom';\n// import HomeList from './components/HomeList';\n// import HomeDetails from './components/HomeDetails';\n// import homesData from './data/homes.json'; // Import the homes data\n\n// function App() {\n//   const [homes, setHomes] = useState([]);\n\n//   useEffect(() => {\n//     // Fetch or set your data here\n//     setHomes(homesData); // Set the data to the state\n//   }, []);\n\n//   // Render HomeList only if homes data is available\n//   const homeListElement = homes.length > 0 ? <HomeList homes={homes} /> : null;\n\n//   return (\n//     <Router>\n//       <div className=\"App\">\n//         <Routes>\n//           <Route path=\"/\" element={homeListElement} />\n//           <Route path=\"/:id\" element={<HomeDetails />} />\n//         </Routes>\n//       </div>\n//     </Router>\n//   );\n// }\n\n// export default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}